# .github/workflows/ci.yml
name: MATLAB CI + Raporlama

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  matlab-reporting:
    runs-on: self-hosted

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4
      
      # Sets up MATLAB on a GitHub-hosted runner
      - name: Set up MATLAB
        uses: matlab-actions/setup-matlab@v2

      # Runs a set of commands using the runners shell
      - name: Run all tests
        uses: matlab-actions/run-tests@v2
        with:
          source-folder: code
      - name: Upload JUnit XML
        uses: actions/upload-artifact@v4
        with:
          name: junit-xml
          path: testResults/*.xml

     # ----- PDF Rapor Oluşturma -----
      - name: Generate PDF Test Report
        run: |
          if not exist reports md reports
          matlab -batch "import mlreportgen.report.*; import mlreportgen.dom.*; \
            rpt = Report('reports/TestResultsReport','pdf'); \
            tr  = TestReport('testResults/tests.xml'); \
            append(rpt,tr); \
            close(rpt); \
            exit;"
      - name: Upload PDF Report
        uses: actions/upload-artifact@v4
        with:
          name: pdf-report
          path: reports/*.pdf

      # ----- PPTX Sunum Oluşturma -----
      - name: Generate PPTX Test Report
        run: |
          if not exist reports md reports
          matlab -batch "import mlreportgen.report.*; import mlreportgen.ppt.*; \
            rpt = Report('reports/TestResultsReport','pptx'); \
            tr  = TestReport('testResults/tests.xml'); \
            append(rpt,tr); \
            close(rpt); \
            exit;"
      - name: Upload PPTX Report
        uses: actions/upload-artifact@v4
        with:
          name: pptx-report
          path: reports/*.pptx